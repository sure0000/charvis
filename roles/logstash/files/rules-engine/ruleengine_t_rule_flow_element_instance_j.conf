input{
    kafka {
        bootstrap_servers => "kafka1:9092,kafka2:9092,kafka3:9092"
        topics => ["ruleengine.t_rule_flow_element_instance_j"]
        client_id => ruleengine_t_rule_flow_element_instance_j
	    consumer_threads => 2
        auto_offset_reset => "earliest"
	}
}

output{
         elasticsearch{
            hosts => ["es1:9200","es2:9200","es3:9200"]
            index => "ruleengine.t_rule_flow_element_instance"
	        document_type => "doc"
            user => elastic
            password => elastic
        }
}
filter{
	json {
		source => "message"
	}
	mutate {
		remove_field => ["message","schema","[source]","[op]","[ts_ms]","[before]","@version"]
		rename => ["[after][ElementArtfiactId]","ElementArtfiactId"]
		rename => ["[after][ElementArtifactName]","ElementArtifactName"]
		rename => ["[after][Id]","Id"]
		rename => ["[after][CreatedDatetime]","CreatedDatetime"]
		rename => ["[after][BatchId]","BatchId"]
		rename => ["[after][LastUpdatedDatetime]","LastUpdatedDatetime"]
		rename => ["[after][ElementExecutedStartDatetime]","ElementExecutedStartDatetime"]
		rename => ["[after][ElementExecutedEndDatetime]","ElementExecutedEndDatetime"]
		rename => ["[after][ElementExecutedDurationInMillis]","ElementExecutedDurationInMillis"]
		rename => ["[after][object_code]","object_code"]
        rename => ["[after][project_code]","project_code"]
	}
}
