input {
    kafka {
        bootstrap_servers => "kafka1:9092,kafka2:9092,kafka3:9092"
        topics => ["rulesplatformtest-rules-engine.t_process_rule_instance_j"]
        client_id => es1
        consumer_threads => 2
        auto_offset_reset => "latest"
        }
}
filter {
    json {
                source => "message"
        }
        mutate {
                remove_field => ["message","schema","[payload][source]","[payload][op]","[payload][ts_ms]","[payload][before]","@version"]
                rename => ["[payload][after][id]","id"]
                rename => ["[payload][after][project_code]","project_code"]
                rename => ["[payload][after][object_code]","object_code"]
                rename => ["[payload][after][batch_id]","batch_id"]
                rename => ["[payload][after][process_name]","process_name"]
                rename => ["[payload][after][rule_package_name]","rule_package_name"]
                rename => ["[payload][after][rule_code]","rule_code"]
                rename => ["[payload][after][executed_status]","executed_status"]
                rename => ["[payload][after][is_hit]","is_hit"]
                rename => ["[payload][after][created_datetime]","created_datetime"]
                rename => ["[payload][after][updated_datetime]","update_datetime"]
        }
}
output {
     elasticsearch{
            hosts => ["10.1.3.123:9200","10.1.3.124:9200","10.1.3.125:9200"]
            index => "rulesplatformtest-rules-engine.t_process_rule_instance"
            document_type => "kafka-connect"
            user => elastic
            password => elastic
        }
}